name: CI

on:
  pull_request:
    branches: [main, prod]

# Add concurrency to cancel outdated runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  checks: write
  contents: read
  pull-requests: read

jobs:
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun
        id: cache-bun
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-latest-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-latest-

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .bun
          key: ${{ runner.os }}-deps-latest-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-latest-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: bun install

      - name: Format check
        run: bun run format:check

      - name: Lint
        run: bun run lint

      - name: Type Check
        run: bun run tsc:check

  test:
    name: Test Suite
    needs: code-quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - test-suite: integration
            test-command: 'bun test tests/integration/ --coverage'
            test-name: 'Integration Tests'
            redis-port: 6380
          - test-suite: security
            test-command: 'bun test tests/security/ --coverage'
            test-name: 'Security Tests'
            redis-port: 6381
      # Fail fast to stop on first failure
      fail-fast: true

    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 3
        ports:
          - ${{ matrix.redis-port }}:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Restore Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .bun
          key: ${{ runner.os }}-deps-latest-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-latest-

      - name: Install dependencies
        if: needs.code-quality.outputs.cache-hit != 'true'
        run: bun install

      - name: Run ${{ matrix.test-name }}
        run: ${{ matrix.test-command }} --bail --reporter=junit --reporter-outfile=./test-results-${{ matrix.test-suite }}.xml
        env:
          NODE_ENV: test
          REDIS_URL: redis://localhost:${{ matrix.redis-port }}
        timeout-minutes: 10

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.test-suite }}-latest
          path: |
            test-results-${{ matrix.test-suite }}.xml
            coverage/
          retention-days: 30
